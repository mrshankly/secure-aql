{cover_enabled, true}.

{erl_opts, [
    debug_info,
    warnings_as_errors,
    {i, "./_build/default/plugins/gpb/include/"}
]}.

{edoc_opts, [
    {preprocess, true},
    {todo, true},
    {includes, ["include/"]},
    {dir, "edoc"}
]}.

{deps, [
    {antidote,
        {git, "https://github.com/mrshankly/antidote.git",
            {branch, "aql-strong-consistency-3-patched"}}},
    {ranch, "2.0.0"},
    {elli, "3.1.0"},
    {jsone, "1.5.6"}
]}.

{relx, [
    {release, {aql, "0.2"}, [aql]},
    {dev_mode, false},
    {include_erts, true},

    % application environment
    {sys_config_src, "config/sys.config.src"},
    % vm arguments passed when starting the Erlang VM
    {vm_args_src, "config/vm.args.src"},

    {overlay, [
        {copy, "bin/env", "bin/env"},
        {copy, "config/network.config", "releases/{{release_version}}/network.config"}
    ]},

    % create start script with additional features
    {extended_start_script, true}
]}.

{plugins, [
    erlfmt,
    {rebar3_gpb_plugin, "2.10.0"}
]}.

{erlfmt, [
    write,
    {print_width, 99},
    {files, ["{src,include,test}/*.{hrl,erl,app.src}", "rebar.config"]}
]}.

{gpb_opts, [
    {i, "proto"},
    {module_name_suffix, "_pb"},
    {o_erl, "src"},
    {o_hrl, "include"},
    {strings_as_binaries, true},
    type_specs
]}.

{provider_hooks, [
    {pre, [
        {clean, {protobuf, clean}},
        {compile, {protobuf, compile}}
    ]}
]}.
